"""
This file is for formatting hdf5 files the right way, so that 3D U-Net can handle the multi-channel images.
Fiji's default is to save RGB images in the order zyxC, but U-Net takes multi-channel input as Czyx.

From tif to hdf5.

Author: Daniel Walther
creation date: 2023.07.04
"""


import h5py
#import matplotlib.pyplot as plt
import skimage
import numpy as np
import os.path


def reformat_tif_stack(tif_stack):

    # reading tiff z stack into a numpy.ndarray
    image = skimage.io.imread(tif_stack)

    # reformatting tiff z stack with np.rollaxis() from Fiji's RGB zyxC order to the 3D U-Net desired Czyx order
    image = np.rollaxis(image, 3, 0)  # 'rolling' the array with regard to its shape (shifting array's shape).
    print(image.shape)
    
    return image


def rename_file(file, suffix):
    temp = file.split("/")
    print("path and filename:", file)
    dir = temp[-2]
    name_ext = temp[-1]
    print("dir:", dir)
    print("name_ext:", name_ext)

    parent_dir = ""
    for dir_part in temp[:-2]:
        parent_dir += dir_part + "/"
    print("\nparent dir:", parent_dir)
    print("dir:", dir)

    dir_suffixed = dir + "-" + suffix + "/"
    print("\ndir and suffix:", dir_suffixed)
    dir_out = parent_dir + dir_suffixed
    print("dir out:", dir_out)

    # create new dir for exporting formatted images, if that directory doesn't exist yet
    os.mkdir(dir_out) if not os.path.exists(dir_out) else None

    # create the file_out name, including its full absolute path
    #filename =
    #file_out = dir_out + filename + "-" + suffix + "." + extension

    #return file_out  # TBD
    return file


def export_tif(image, filename):
    # <save the formatted np.ndarray in tif format>
    return 0


def main(file, suffix):
    if os.path.isfile(file):
        image_formatted = reformat_tif_stack(file)
        file_out = rename_file(file, suffix)
        export_tif(image_formatted, file_out)
    pass


if __name__ == "__main__":
    
    # tif file with its data dimensions / order as such: [z, y, x, c], where zyx are image dimensions (pixel locations),
    # and c is channel (laser lines saved as RGB)
    tif_from_fiji = "M:/data/d.walther/Microscopy/babb03/tiff-ct3/-crop-bicubic-scaled0.25-autofluo-hyperstackRGB24/" \
                    "id01-img_Ch405,488,561nm-crop-scaled0.25-hyperstackRGB.tif"

    # os.path.isfile(file) returns True if file exists
    if os.path.isfile(tif_from_fiji):

        main(tif_from_fiji, "czyx")
        