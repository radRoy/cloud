session,goal/question,expectations/predictions,result/answer,finished training,valid(usable) session (for VRAM prediction),dataset,n images,n train,n val,n raw channels,n label channels,bitdepth per raw channel,raw pixel type,bitdepth per label channel,label pixel type,n patches,VRAM usage (MiB),VRAM capacity (MiB),GPU,res. Z,res. Y,res. X,patch z,patch y,patch x,train patch = val patch,stride z,stride y,stride x,train stride = val stride,comments to patch,comments to stride,error,file of error origin,,,,,
230830-0,better performance metrics,,out of VRAM,0,0,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,>32768,32768,Tesla V100-SXM2-32GB,125,1169,414,105,1149,394,yes,10,10,10,yes,patch = (resolution - arbitrary_value),stride = (resolution - patch) / 2,,,,,,,
230901-0,reduce VRAM usage,,out of VRAM,0,0,dataset03,5,3,2,3,1,16,uint16,8,uint8,10,>32768,32768,Tesla V100-SXM2-32GB,125,1169,414,100,1100,390,yes,10,10,10,yes,patch = (resolution - arbitrary_value),stride = (resolution - patch) / 2,,,,,,,
230901-1,Are these valid inputs?: patch + stride > resolution,no,"no, invalid patch shape, stride",0,0,dataset03,5,3,2,3,1,16,uint16,8,uint8,NA,NA,32768,Tesla V100-SXM2-32GB,125,1169,414,100,1100,390,yes,26,70,25,yes,patch = (resolution - arbitrary_value),stride = (resolution - patch) + 1,AssertionError: datasets should not be an empty iterable,,,,,,
230901-2,Are these valid inputs?: patch + stride = resolution,no,"no, invalid patch shape, stride",0,0,dataset03,5,3,2,3,1,16,uint16,8,uint8,NA,NA,32768,Tesla V100-SXM2-32GB,125,1169,414,100,1100,390,yes,25,69,24,yes,patch = (resolution - arbitrary_value),stride = resolution - patch,AssertionError: datasets should not be an empty iterable,,,,,,
230901-3,Are these valid inputs?: patch + 2*stride = resolution,yes,"yes, but out of VRAM",0,0,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,>32768,32768,Tesla V100-SXM2-32GB,125,1169,414,101,1009,400,yes,12,90,7,yes,patch = (resolution - arbitrary_value),stride = (resolution - patch) / 2,torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.20 GiB (GPU 0; 31.74 GiB total capacity; 29.37 GiB already allocated; 1.06 GiB free; 29.47 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF,,,,,,
230901-4,,yes,"invalid patch shape, stride",0,0,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,NA,32768,Tesla V100-SXM2-32GB,125,1169,414,75,929,304,yes,25,120,55,yes,patch = (resolution - arbitrary_value),stride = (resolution - patch) / 2,"ValueError: requested an output size of torch.Size([9, 38, 116]), but valid sizes range from [7, 37, 115] to [8, 38, 116] (for an input of torch.Size([4, 19, 58]))",,,,,,
230901-5,"Are these valid patch, stride shapes (int_2^3)?",yes,"invalid patch shape, stride",0,0,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,NA,32768,Tesla V100-SXM2-32GB,125,1169,414,72,928,304,yes,24,120,48,yes,"patch = an arbitrary int_2^3 (odd, even mixed)","stride = (resolution - patch) / 2, round down to largest int_2^3 (odd or even mixed)","ValueError: requested an output size of torch.Size([9, 38, 116]), but valid sizes range from [7, 37, 115] to [8, 38, 116] (for an input of torch.Size([4, 19, 58]))","output padding, assignment of 'output_padding'",,,,,
230901-6,"Are these valid patch, stride shapes (even int_2^3)?",yes,"yes, but out of VRAM",0,0,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,>32768,32768,Tesla V100-SXM2-32GB,125,1169,414,64,928,304,yes,24,120,40,yes,patch = an arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest odd int_2^3",torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 70.00 MiB (GPU 0; 31.74 GiB total capacity; 30.43 GiB already allocated; 11.12 MiB free; 30.53 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF,"  File ""/home/dwalth/data/conda/envs/3dunet/lib/python3.11/site-packages/torch/nn/functional.py"", line 3165, in binary_cross_entropy_with_logits
    return torch.binary_cross_entropy_with_logits(input, target, weight, pos_weight, reduction_enum)",,,,,
230901-7,"Does it fit into VRAM, now (patch even int_2^3)?",yes,yes,0,1,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,10135,32768,Tesla V100-SXM2-32GB,125,1169,414,64,400,160,yes,24,376,120,yes,patch = an arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest odd int_2^3",,,,,,,
230901-8,Are odd int_2^3 in patch valid? (with odd int_2^3 stride),no (odd int_2^3 in patch),no,0,0,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,NA,32768,Tesla V100-SXM2-32GB,125,1169,414,72,408,168,yes,24,376,120,yes,patch = an arbitrary odd int_2^3,"stride = (resolution - patch) / 2, round down to largest odd int_2^3","ValueError: requested an output size of torch.Size([9, 21, 51]), but valid sizes range from [7, 19, 49] to [8, 20, 50] (for an input of torch.Size([4, 10, 25]))","output padding, assignment of 'output_padding'",,,,,
230901-9,Are odd int_2^3 in patch valid? (with even int_2^3 stride),no (odd int_2^3 in patch),no,0,0,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,NA,32768,Tesla V100-SXM2-32GB,125,1169,414,72,408,168,yes,16,368,112,yes,patch = an arbitrary odd int_2^3,"stride = (resolution - patch) / 2, round down to largest even int_2^3","ValueError: requested an output size of torch.Size([9, 21, 51]), but valid sizes range from [7, 19, 49] to [8, 20, 50] (for an input of torch.Size([4, 10, 25]))","output padding, assignment of 'output_padding'",,,,,
230901-10,Are even int_2^3 in patch valid? (with odd int_2^3 stride),yes (even int_2^3 in patch),yes,0,1,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,13843,32768,Tesla V100-SXM2-32GB,125,1169,414,80,416,176,yes,8,376,104,yes,patch = an arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest odd int_2^3",,,,,,,
230901-11,Are even int_2^3 in patch valid? (with even int_2^3 stride),yes (even int_2^3 in patch),yes,0,1,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,13843,32768,Tesla V100-SXM2-32GB,125,1169,414,80,416,176,yes,16,368,112,yes,patch = arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest even int_2^3",,,,,,,
230901-12,"VRAM ~ patch_shape study, common zyx",probably multiple patches per image,"2 patches per image, wanted 1",0,1,dataset03,5,3,2,3,1,16,uint16,8,uint8,10,TBD output transfer,32768,Tesla V100-SXM2-32GB,125,1169,414,64,400,160,yes,8,368,96,yes,patch = arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest int_2^3 (odd or even), take smallest stride values of following patch VRAM study sessions",,,,,,,
230901-13,"VRAM ~ patch_shape study, common zyx","same patch, thus same VRAM usage, as in session 230901-7",yes,0,1,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,10135,32768,Tesla V100-SXM2-32GB,125,1169,414,64,400,160,yes,24,384,120,yes,patch = arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest int_2^3 (odd or even)",,,,,,,
230901-14,"VRAM ~ patch_shape study, x change",more VRAM usage than smaller patch,yes,0,1,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,10999,32768,Tesla V100-SXM2-32GB,125,1169,414,64,400,176,yes,24,384,112,yes,patch = arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest int_2^3 (odd or even)",,,,,,,
230901-15,"VRAM ~ patch_shape study, x change",more VRAM usage than smaller patch,yes,0,1,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,11843,32768,Tesla V100-SXM2-32GB,125,1169,414,64,400,192,yes,24,384,104,yes,patch = arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest int_2^3 (odd or even)",,,,,,,
230901-16,"VRAM ~ patch_shape study, y change",more VRAM usage than smaller patch,yes,0,1,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,10473,32768,Tesla V100-SXM2-32GB,125,1169,414,64,416,160,yes,24,376,120,yes,patch = arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest int_2^3 (odd or even)",,,,,,,
230901-17,"VRAM ~ patch_shape study, y change",more VRAM usage than smaller patch,yes,0,1,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,10825,32768,Tesla V100-SXM2-32GB,125,1169,414,64,432,160,yes,24,368,120,yes,patch = arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest int_2^3 (odd or even)",,,,,,,
230901-18,"VRAM ~ patch_shape study, z change",more VRAM usage than smaller patch,yes,0,1,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,12317,32768,Tesla V100-SXM2-32GB,125,1169,414,80,400,160,yes,16,384,120,yes,patch = arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest int_2^3 (odd or even)",,,,,,,
230901-19,"VRAM ~ patch_shape study, z change",more VRAM usage than smaller patch,yes,0,1,dataset03,5,3,2,3,1,16,uint16,8,uint8,5,14443,32768,Tesla V100-SXM2-32GB,125,1169,414,96,400,160,yes,8,384,120,yes,patch = arbitrary even int_2^3,"stride = (resolution - patch) / 2, round down to largest int_2^3 (odd or even)",,,,,,,
,,"I expect the VRAM usage to be directly, but not linearly, dependent on the difference in patch size.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,"I expect the same overall size (in pixels) to require the same amount of VRAM, if 3dunet truly has a 3D architecture (based on the best of my AI knowledge) - regardless of which dimension has what shape.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
